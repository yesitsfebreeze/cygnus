#define BASE_LAYER 0
#define LEFT_LAYER 1
#define RIGHT_LAYER 2
#define COMBO_LAYER 3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define SFT MOD_LSFT|MOD_RSFT

/ {
    behaviors {
        alphas: _ALPHAS {
            compatible = "zmk,behavior-macro";
            label = "ALPHAS";
            #binding-cells = <0>;
            bindings = < &sl 1 >;
	    };

        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
        };

        _LPRN: _LPRN {
            compatible = "zmk,behavior-mod-morph";
            label = "_LPRN";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACE>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _RPRN: _RPRN {
            compatible = "zmk,behavior-mod-morph";
            label = "_RPRN";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _SLASH: _SLASH {
            compatible = "zmk,behavior-mod-morph";
            label = "_SLASH";
            bindings = <&kp SLASH>, <&kp NON_US_BACKSLASH>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _LBRKT: _LBRKT {
            compatible = "zmk,behavior-mod-morph";
            label = "_LBRKT";
            bindings = <&kp LEFT_BRACKET>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _RBRKT: _RBRKT {
            compatible = "zmk,behavior-mod-morph";
            label = "_RBRKT";
            bindings = <&kp RIGHT_BRACKET>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _COL: _COL {
            compatible = "zmk,behavior-mod-morph";
            label = "_COL";
            bindings = <&kp COLON>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _QUOT: _QUOT {
            compatible = "zmk,behavior-mod-morph";
            label = "_QUOT";
            bindings = <&kp DOUBLE_QUOTES>, <&kp SQT>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _DOT_QUES: _DOT_QUES {
            compatible = "zmk,behavior-mod-morph";
            label = "_DOT_QUES";
            bindings = <&kp PERIOD>, <&kp QUESTION>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _COM_EXCL: _COM_EXCL {
            compatible = "zmk,behavior-mod-morph";
            label = "_COM_EXCL";
            bindings = <&kp COMMA>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _EQL: _EQL {
            compatible = "zmk,behavior-mod-morph";
            label = "_EQL";
            bindings = <&kp EQUAL>, <&kp EQUAL>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _UNDS: _UNDS {
            compatible = "zmk,behavior-mod-morph";
            label = "_UNDS";
            bindings = <&kp UNDERSCORE>, <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _COM_DOT: _COM_DOT {
            compatible = "zmk,behavior-mod-morph";
            label = "_COM_DOT";
            bindings = <&kp COMMA>, <&kp PERIOD>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _BSP_DEL: _BSP_DEL {
            compatible = "zmk,behavior-mod-morph";
            label = "_BSP_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _N9_TLD: _N9_TLD {
            compatible = "zmk,behavior-mod-morph";
            label = "_N9_TLD";
            bindings = <&kp N9>, <&kp TILDE>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };

        _MNS_PLS: _MNS_PLS {
            compatible = "zmk,behavior-mod-morph";
            label = "_MNS_PLS";
            bindings = <&kp MINUS>, <&kp PLUS>;

            #binding-cells = <0>;
            mods = <(SFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE_LAYER {
            bindings = <
       &none  &none  &none                  &none  &none  &none
&none  &none  &none  &none                  &none  &none  &none  &none
&none  &none  &none  &none                  &none  &none  &none  &none
                     &none  &none    &none  &none
            >;

            label = "BASE_LAYER";
        };

        LEFT_LAYER {
            bindings = <
       &none  &none  &none                  &none  &none  &none
&none  &none  &none  &none                  &none  &none  &none  &none
&none  &none  &none  &none                  &none  &none  &none  &none
                     &none  &none    &none  &none
            >;

            label = "LEFT_LAYER";
        };

        RIGHT_LAYER {
            bindings = <
       &none  &none  &none                  &none  &none  &none
&none  &none  &none  &none                  &none  &none  &none  &none
&none  &none  &none  &none                  &none  &none  &none  &none
                     &none  &none    &none  &none
            >;

            label = "RIGHT_LAYER";
        };

        COMBO_LAYER {
            bindings = <
       &none  &none  &none                  &none  &none  &none
&none  &none  &none  &none                  &none  &none  &none  &none
&none  &none  &none  &none                  &none  &none  &none  &none
                     &none  &none    &none  &none
            >;

            label = "COMBO_LAYER";
        };

    };
};
